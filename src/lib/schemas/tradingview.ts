import { z } from "zod";

// TradingView technical indicators schema based on provided sample payload
// Fields are numeric unless the sample shows null, in which case they are nullable
export const TradingViewIndicatorsSchema = z.object({
  ADX: z.number(),
  "ADX DI": z.number().nullable(),
  "ADX DI[1]": z.number().nullable(),
  "ADX-DI": z.number(),
  "ADX-DI[1]": z.number(),
  AO: z.number(),
  "AO[1]": z.number(),
  "AO[2]": z.number(),
  BBPower: z.number(),
  CCI20: z.number(),
  "CCI20[1]": z.number(),
  EMA10: z.number(),
  EMA100: z.number(),
  EMA20: z.number(),
  EMA200: z.number(),
  EMA30: z.number(),
  EMA50: z.number(),
  HullMA9: z.number(),
  "Ichimoku.BLine": z.number(),
  "MACD.macd": z.number(),
  "MACD.signal": z.number(),
  Mom: z.number(),
  "Mom[1]": z.number(),
  RSI: z.number(),
  "RSI[1]": z.number(),
  "Rec.BBPower": z.number(),
  "Rec.HullMA9": z.number(),
  "Rec.Ichimoku": z.number(),
  "Rec.Stoch.RSI": z.number(),
  "Rec.UO": z.number(),
  "Rec.VWMA": z.number().nullable(),
  "Rec.WR": z.number(),
  "Recommend.All": z.number(),
  "Recommend.MA": z.number(),
  "Recommend.Other": z.number(),
  SMA10: z.number(),
  SMA100: z.number(),
  SMA20: z.number(),
  SMA200: z.number(),
  SMA30: z.number(),
  SMA50: z.number(),
  "Stoch.D": z.number(),
  "Stoch.D[1]": z.number(),
  "Stoch.K": z.number(),
  "Stoch.K[1]": z.number(),
  "Stoch.RSI.K": z.number(),
  UO: z.number(),
  VWMA: z.number().nullable(),
  "W.R": z.number(),
  close: z.number(),
});

export type TradingViewIndicators = z.infer<typeof TradingViewIndicatorsSchema>;



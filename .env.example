# Environment Configuration

Create a `.env` file in the root directory with the following variables:

```env
# Authentication API Base URL (Backend)
VITE_BASE_API=http://localhost:3000/api

# Other API endpoints
VITE_API_BASE_URL=https://proxy.iqx.vn/proxy/ai/api/v2

# Database Configuration (for backend)
DATABASE_URL=postgresql://username:password@localhost:5432/dashboard_db

# JWT Configuration (for backend)
JWT_SECRET=your-super-secure-jwt-secret-key-here
JWT_EXPIRES_IN=24h

# Email Configuration (for backend)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# SMS Configuration (for backend)
SMS_API_KEY=your-sms-provider-api-key
SMS_API_SECRET=your-sms-provider-secret

# Application Configuration
APP_NAME=Dashboard
APP_URL=http://localhost:5173
FRONTEND_URL=http://localhost:5173

# Security
BCRYPT_ROUNDS=12
RATE_LIMIT_WINDOW=60000
RATE_LIMIT_MAX=100

# Development
NODE_ENV=development
```

## Frontend Environment Variables

- `VITE_AUTH_API_BASE_URL`: Base URL for authentication API endpoints
- `VITE_API_BASE_URL`: Base URL for other API endpoints (already configured)

## Backend Environment Variables (if implementing backend)

- `DATABASE_URL`: PostgreSQL connection string
- `JWT_SECRET`: Secret key for JWT token signing
- `JWT_EXPIRES_IN`: JWT token expiration time
- `SMTP_*`: Email service configuration for password reset and verification
- `SMS_*`: SMS service configuration for phone verification
- `APP_*`: Application configuration
- `BCRYPT_ROUNDS`: Password hashing rounds
- `RATE_LIMIT_*`: Rate limiting configuration

## Database Setup

1. Create PostgreSQL database:
```sql
CREATE DATABASE dashboard_db;
```

2. Run the schema from `schema/auth.sql`:
```bash
psql -d dashboard_db -f schema/auth.sql
```

3. Update the connection string in your environment variables.

## API Integration

The authentication system is configured to work with these API endpoints:

- `POST /api/auth/login` - User login
- `POST /api/auth/register` - User registration
- `POST /api/auth/logout` - User logout
- `POST /api/auth/refresh` - Refresh JWT token
- `GET /api/auth/profile` - Get user profile
- `PATCH /api/auth/profile` - Update user profile
- `POST /api/auth/change-password` - Change password
- `POST /api/auth/forgot-password` - Request password reset
- `POST /api/auth/reset-password` - Reset password with token
- `POST /api/auth/phone/verify` - Send phone verification SMS
- `POST /api/auth/phone/confirm` - Confirm phone verification
- `GET /api/auth/verify-email` - Verify email with token
- `POST /api/auth/resend-email-verification` - Resend email verification

All endpoints follow the API specification in `docs/AUTH_API.md`.